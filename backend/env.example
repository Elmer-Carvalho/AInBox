# AInBox Backend Environment Configuration
# Copy this file to .env and fill in your values

# Application Settings
APP_NAME=AInBox API
VERSION=1.0.0
ENVIRONMENT=development
DEBUG=true

# Server Settings
HOST=0.0.0.0
# PORT is automatically set by Google Cloud Run - DO NOT SET MANUALLY

# CORS Settings (comma-separated list or * for all origins)
ALLOWED_ORIGINS=*

# Google Gemini API
GOOGLE_API_KEY=your_google_api_key_here
GEMINI_MODEL=gemini-1.5-flash

# WebSocket Settings
WS_HEARTBEAT_INTERVAL=30
WS_MAX_CONNECTIONS=100

# File Processing Settings
MAX_FILE_SIZE=5242880
MAX_TOTAL_SIZE=104857600
MAX_FILES_PER_REQUEST=20
MAX_STRINGS_PER_REQUEST=20
ALLOWED_FILE_TYPES=.txt,.pdf

# Rate Limiting
RATE_LIMIT_PER_MINUTE=5
RATE_LIMIT_WINDOW=60
RATE_LIMIT_BURST=3

# Redis Settings
# For local development (Docker Compose):
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_SSL=false
REDIS_TTL=60

# For production (Google Cloud Memorystore):
# REDIS_HOST=your-redis-instance-ip
# REDIS_PASSWORD=your_auth_string_from_gcp

# Google Cloud Run Specific Notes:
# - PORT is automatically set by Cloud Run (usually 8080)
# - HOST must be 0.0.0.0 to accept external connections
# - Use Google Cloud Memorystore for Redis in production
# - Set DEBUG=false and ENVIRONMENT=production for production deployments
# - Update ALLOWED_ORIGINS with your actual frontend domain in production
# - ALLOWED_ORIGINS and ALLOWED_FILE_TYPES are comma-separated strings

# Docker Compose Development Notes:
# - Use REDIS_HOST=redis for local development
# - Set DEBUG=true and ENVIRONMENT=development for local development
# - ALLOWED_ORIGINS=* works for local development and testing tools
